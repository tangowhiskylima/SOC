input {
      beats {
            port => 5044
      }
}

filter {
  if [type] == "cowrie" { 
       json {
            source => message
            target => honeypot
       }

       date {
         match => [ "timestamp", "ISO8601" ]
       }

       if [honeypot][src_ip]  {
          mutate {
                 add_field => { "src_host" => "%{[honeypot][src_ip]}" }
          }
       }
       mutate {
           #cut out useless tags/fields
           remove_tag => [ "beats_input_codec_plain_applied"]
           remove_field => [ "[log][file][path]", "[log][offset]" ]
       }
  }
  
  else if [type] == "ufw" {
    grok { 
      break_on_match => true
      match => { 
        "message" => [
          "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:[host][name]} %{GREEDYDATA} \[UFW %{WORD:ufw_action}\] IN=%{DATA:interface} OUT=%{DATA:out} MAC=%{MAC:[destination][mac]}:%{MAC:[source][mac]}:%{WORD}:%{WORD} SRC=%{IP:[source][ip]} DST=%{IP:[destination][ip]} %{GREEDYDATA:packet_options} PROTO=%{WORD:protocol} SPT=%{INT:[source][port]} DPT=%{INT:[destination][port]} %{GREEDYDATA:tcp_options}",
          "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:[host][name]} %{GREEDYDATA} \[UFW %{WORD:ufw_action}\] IN=%{DATA:interface} OUT=%{DATA:out} MAC=%{MAC:[destination][mac]}:%{MAC:[source][mac]}:%{WORD}:%{WORD} SRC=%{IP:[source][ip]} DST=%{IP:[destination][ip]} %{GREEDYDATA:packet_options} PROTO=%{WORD:protocol} TYPE=%{INT:icmp_type} %{GREEDYDATA}"
        ]
      }
    }
    
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss" ]
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://localhost:9200"]
    #ilm_enabled => auto
    #ilm_rollover_alias => "cowrie-logstash"
    ssl_certificate_authorities => ['/etc/logstash/config/cert/ca.crt']
    api_key => "UPDATE YOUR KEY"

    index => "project-logs"
        #file {
        #    path => "/tmp/cowrie-logstash.log"
        #    codec => json
        #}
  }
  stdout {
    codec => rubydebug
  }
}
